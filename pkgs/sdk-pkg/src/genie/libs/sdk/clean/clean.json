{"recovery_processor": {"com": {"module_name": "processor", "doc": null, "uid": "recovery_processor", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/sdk-pkg/src/genie/libs/sdk/clean/processor.py#L49"}}, "connect": {"iosxe": {"module_name": "stages.stages", "doc": null, "uid": "connect", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/sdk-pkg/src/genie/libs/sdk/clean/stages/iosxe/stages.py#L8"}, "com": {"module_name": "stages.stages", "doc": "\n    Checks if the connection to device is available\n    ", "uid": "connect", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/sdk-pkg/src/genie/libs/sdk/clean/stages/stages.py#L9"}}, "reload": {"iosxe": {"module_name": "stages.stages", "doc": null, "uid": "reload", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/sdk-pkg/src/genie/libs/sdk/clean/stages/iosxe/stages.py#L21"}, "nxos": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                reload:\n                    prompt_recovery: <Enable/Disable prompt recovery feature, 'boolean'> (Optional)\n                    sleep_after_reload: <Time to sleep after reload, 'int'> (Optional)\n                    credentials:\n                        username: <Username to use if device prompts for username other than the one in the testbed, 'str'> (Optional)\n                        password: <Password to use if device prompts for username other than the one in the testbed, 'str'> (Optional)\n\n    Example:\n    --------\n        devices:\n            N95_1:\n                reload:\n                    prompt_recovery: True\n                    sleep_after_reload: 120\n                    credentials:\n                        username: admin\n                        password: 12345\n\n    Flow:\n    -----\n        before:\n            change_boot_variable (Mandatory)\n            apply_golden_config (Optional, configure device to come up with specific startup configs)\n        after:\n            change_boot_variable (Optional, to verify current boot variable and set next)\n    ", "uid": "reload", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/sdk-pkg/src/genie/libs/sdk/clean/stages/nxos/stages.py#L132"}}, "write_erase": {"iosxe": {"module_name": "stages.stages", "doc": null, "uid": "write_erase", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/sdk-pkg/src/genie/libs/sdk/clean/stages/iosxe/stages.py#L16"}, "nxos": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                write_erase:\n\n    Example:\n    --------\n        devices:\n            N95_1:\n                write_erase:\n\n    Flow:\n    -----\n        before:\n            copy_file_on_device (Optional, Backup configuration file then perform write erase)\n        after:\n            delete_file_from_device (Optional, Delete the backed up configuration file)\n            apply_golden_config (Optional, user wants to apply golden config or not)\n    ", "uid": "write_erase", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/sdk-pkg/src/genie/libs/sdk/clean/stages/nxos/stages.py#L93"}}, "apply_configuration": {"nxos": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                apply_configuration:\n                    config: <Configuration file/block to be applied, 'str'> (Mandatory)\n                    file: <Is it a file or not, 'boolean'> (Optional)\n                    config_timeout: <Timeout in seconds, 'int'> (Optional)\n                    config_stable_time: <Time for configuration stability in seconds, 'int'> (Optional)\n                    copy_vdc_all: <To copy on all VDCs or not, 'boolean'> (Optional)\n                    max_time: <Maximum time section will take for checks in seconds, 'int'> (Optional)\n                    check_interval: <Time interval, 'int'> (Optional)\n\n    Example:\n    --------\n        devices:\n            N95_1:\n                apply_configuration:\n                    config: bootflash:/ISSUCleanGolden.cfg\n                    file: True\n                    config_timeout: 600\n                    config_stable_time: 10\n                    copy_vdc_all: True\n                    max_time: 300\n                    check_interval: 20\n\n    Flow:\n    -----\n        before:\n            None\n        after:\n            None\n    ", "uid": "apply_configuration", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/sdk-pkg/src/genie/libs/sdk/clean/stages/nxos/stages.py#L209"}}, "change_boot_variable": {"nxos": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                change_boot_variable:\n                    images:\n                        kickstart: <kickstart image> (Optional)\n                        system: <system image> (Mandatory)\n                    copy_vdc_all: <Copy on all VDCs, 'Boolean'> (Optional)\n                    timeout: <Execute timeout in seconds, 'int'> (Optional)\n                    max_time: <Maximum time section will take for checks in seconds, 'int'> (Optional)\n                    check_interval: <Time interval, 'int'> (Optional)\n                    stabilize_time: <Time in seconds till boot variables stabilization, 'int'> (Optional)\n\n\n    Example:\n    --------\n        devices:\n            N95_1:\n                change_boot_variable:\n                    images:\n                        kickstart: bootflash:/kisckstart.gbin\n                        system: bootflash:/system.gbin\n                    copy_vdc_all: True\n                    timeout: 150\n                    max_time: 300\n                    check_interval: 20\n                    stabilize_time: 100\n\n    Flow:\n    -----\n        before:\n            copy_to_device (Optional, If images to set as boot variable is not already on device)\n        after:\n            write_erase (Optional, user wants to reload with current running configuration or not)\n    ", "uid": "change_boot_variable", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/sdk-pkg/src/genie/libs/sdk/clean/stages/nxos/stages.py#L15"}}, "copy_file_on_device": {"nxos": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                copy_file_on_device:\n                    copy_file: <Configuration file to be backed up, 'str'> (Mandatory)\n\n    Example:\n    --------\n        devices:\n            N95_1:\n                copy_file_on_device:\n                    copy_file:\n                        - bootflash:/ISSUCleanGolden.cfg\n\n    Flow:\n    -----\n        before:\n            None\n        after:\n            write_erase (Optional, Backup configuration file then perform write erase)\n    ", "uid": "copy_file_on_device", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/sdk-pkg/src/genie/libs/sdk/clean/stages/nxos/stages.py#L443"}}, "copy_to_device": {"nxos": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                copy_to_device:\n                    origin:\n                        path: <File location on the server, 'list'> (Mandatory)\n                        server: <Hostname or address of the server 'str'> (Mandatory)\n                    destination: <Location on the device, 'str'> (Mandatory)\n                    protocol: <Protocol used for copy operation, 'str'> (Mandatory)\n                    vrf: <Vrf name if applicable, 'str'> (Optional)\n                    always_copy: <always copy even when the same file already exists 'bool'> (Optional)\n                    compact: <Compact copy mode if supported by the device 'bool'> (Optional)\n                    timeout: <Copy operation timeout in seconds, default 300 'int'> (Optional)\n\n    Example:\n    --------\n        devices:\n            N95_1:\n                copy_to_device:\n                    protocol: sftp\n                    origin:\n                        hostname: server-1\n                        path:\n                        - /home/cisco/kickstart.bin\n                        - /home/cisco/system.bin\n                    timeout: 300\n                    destination: bootflash:/\n                    vrf: management\n\n    Flow:\n    -----\n        before:\n            None\n        after:\n            verify_copied_images (Optional, to verify copied image name and size)\n    ", "uid": "copy_to_device", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/sdk-pkg/src/genie/libs/sdk/clean/stages/nxos/stages.py#L281"}}, "delete_file_from_device": {"nxos": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                delete_file_from_device:\n                    delete_file: <Configuration file to be backed up, 'str'> (Mandatory)\n\n    Example:\n    --------\n        devices:\n            N95_1:\n                delete_file_from_device:\n                    delete_file: bootflash:/ISSUCleanGolden.cfg_backup\n\n    Flow:\n    -----\n        before:\n            write_erase (Optional, Perform write erase then delete the backed up file)\n        after:\n            None\n    ", "uid": "delete_file_from_device", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/sdk-pkg/src/genie/libs/sdk/clean/stages/nxos/stages.py#L487"}}, "verify_running_image": {"nxos": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                verify_running_image:\n                    images: <Images reloaded on the device, 'list'> (Mandatory)\n\n    Example:\n    --------\n        devices:\n            N95_1:\n                verify_running_image:\n                    images:\n                        - test_image.gbin\n\n    Flow:\n    -----\n        before:\n            reload (Mandatory, Reload device first then verify it)\n        after:\n            None\n    ", "uid": "verify_running_image", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/sdk-pkg/src/genie/libs/sdk/clean/stages/nxos/stages.py#L405"}}, "copy_to_linux": {"com": {"module_name": "stages.stages", "doc": "one server in device section and other in server section", "uid": "copy_to_linux", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/sdk-pkg/src/genie/libs/sdk/clean/stages/stages.py#L53"}}, "ping_file_server": {"com": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                ping_file_server:\n                  server: <Hostname or address of the server to ping `str`> (Mandatory)\n                  vrf: <Vrf used in ping `str`> (Optional)\n\n    Example:\n    --------\n        devices:\n            N95_1:\n                ping_file_server:\n                  server: server-1\n                  vrf: management\n\n    Flow:\n    -----\n        before:\n            copy_to_device (Optional, checks if server is reachable before trying to copy)\n        after:\n            None\n    ", "uid": "ping_file_server", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/pkgs/sdk-pkg/src/genie/libs/sdk/clean/stages/stages.py#L98"}}}